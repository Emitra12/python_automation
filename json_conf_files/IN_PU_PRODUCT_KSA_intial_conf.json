{
    "source": {
        "driver": "oracle.jdbc.driver.OracleDriver",
        "password": "surya12345678999",
        "query": "ODS_SL.IN_PU_PRODUCT",
        "url": "jdbc:oracle:thin:@arb30-scan:1521/odsprod",
        "user": "suryaArb11"
    },
    "target": {
        "format": "parquet",
        "maxRecordsPerFile": 10000000,
        "outputPath": "/edh/prod/data/salexdb/raw/salex_jo/",
        "tableName": "IN_PU_PRODUCT",
        "transformationQuery": "select PRODUCT_ID as product_id, PRODUCT_TYPE_ID as product_type_id, PRIMARY_PRODUCT_CATEGORY_ID as primary_product_category_id, MANUFACTURER_PARTY_ID as manufacturer_party_id, FACILITY_ID as facility_id, cast(INTRODUCTION_DATE as string) as introduction_date, cast(RELEASE_DATE as string) as release_date, cast(SUPPORT_DISCONTINUATION_DATE as string) as support_discontinuation_date, cast(SALES_DISCONTINUATION_DATE as string) as sales_discontinuation_date, SALES_DISC_WHEN_NOT_AVAIL as sales_disc_when_not_avail, INTERNAL_NAME as internal_name, BRAND_NAME as brand_name, COMMENTS as comments, PRODUCT_NAME as product_name, DESCRIPTION as description, LONG_DESCRIPTION as long_description, PRICE_DETAIL_TEXT as price_detail_text, SMALL_IMAGE_URL as small_image_url, MEDIUM_IMAGE_URL as medium_image_url, LARGE_IMAGE_URL as large_image_url, DETAIL_IMAGE_URL as detail_image_url, ORIGINAL_IMAGE_URL as original_image_url, DETAIL_SCREEN as detail_screen, INVENTORY_MESSAGE as inventory_message, REQUIRE_INVENTORY as require_inventory, QUANTITY_UOM_ID as quantity_uom_id, QUANTITY_INCLUDED as quantity_included, PIECES_INCLUDED as pieces_included, REQUIRE_AMOUNT as require_amount, FIXED_AMOUNT as fixed_amount, AMOUNT_UOM_TYPE_ID as amount_uom_type_id, WEIGHT_UOM_ID as weight_uom_id, WEIGHT as weight, PRODUCT_WEIGHT as product_weight, HEIGHT_UOM_ID as height_uom_id, PRODUCT_HEIGHT as product_height, SHIPPING_HEIGHT as shipping_height, WIDTH_UOM_ID as width_uom_id, PRODUCT_WIDTH as product_width, SHIPPING_WIDTH as shipping_width, DEPTH_UOM_ID as depth_uom_id, PRODUCT_DEPTH as product_depth, SHIPPING_DEPTH as shipping_depth, DIAMETER_UOM_ID as diameter_uom_id, PRODUCT_DIAMETER as product_diameter, PRODUCT_RATING as product_rating, RATING_TYPE_ENUM as rating_type_enum, RETURNABLE as returnable, TAXABLE as taxable, CHARGE_SHIPPING as charge_shipping, AUTO_CREATE_KEYWORDS as auto_create_keywords, INCLUDE_IN_PROMOTIONS as include_in_promotions, IS_VIRTUAL as is_virtual, IS_VARIANT as is_variant, VIRTUAL_VARIANT_METHOD_ENUM as virtual_variant_method_enum, ORIGIN_GEO_ID as origin_geo_id, REQUIREMENT_METHOD_ENUM_ID as requirement_method_enum_id, BILL_OF_MATERIAL_LEVEL as bill_of_material_level, RESERV_MAX_PERSONS as reserv_max_persons, RESERV2ND_P_P_PERC as reserv2nd_p_p_perc, RESERV_NTH_P_P_PERC as reserv_nth_p_p_perc, CONFIG_ID as config_id, cast(CREATED_DATE as string) as created_date, CREATED_BY_USER_LOGIN as created_by_user_login, cast(LAST_MODIFIED_DATE as string) as last_modified_date, LAST_MODIFIED_BY_USER_LOGIN as last_modified_by_user_login, IN_SHIPPING_BOX as in_shipping_box, DEFAULT_SHIPMENT_BOX_TYPE_ID as default_shipment_box_type_id, cast(LAST_UPDATED_STAMP as string) as last_updated_stamp, cast(LAST_UPDATED_TX_STAMP as string) as last_updated_tx_stamp, cast(CREATED_STAMP as string) as created_stamp, cast(CREATED_TX_STAMP as string) as created_tx_stamp, IS_ACTIVE as is_active,cast(CDC_TIMESTAMP as string) as cdc_timestamp,year(CDC_TIMESTAMP) as year,month(CDC_TIMESTAMP) as month,day(CDC_TIMESTAMP) as day"
    }
}